// plugins содержит плагины, которые предоставляют необходимые библиотеки и их версии
plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.4'
	id 'io.spring.dependency-management' version '1.1.6'
	// подключение Hibernate
	id "org.hibernate.orm" version "6.6.1.Final"

}
//jar {
//	manifest {
//		attributes(
//				'Main-Class': 'com.github.Denis.CarToApplication'
//		)
//	}
//}
//bootJar {
//	mainClass = 'com.github.Denis.CarToApplication' // Укажи свой главный класс
//}

//Параметры group, version отвечают за группу и версию проекта, а sourceCompatibility - версию java, targetCompability - какой версией компилировать
group = 'com.github'
version = '0.0.1-SNAPSHOT'

// компилим 21 джавой
java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}
//отвечает за ресурс с которого будут скачаны недостающие библиотеки
repositories {
	mavenCentral()
}

// dependencies - позволяет подключать необходимые нам зависимости, в том числе и стартеры SpringBoot
dependencies {
	//здесь перечилены все зависимости, которые задали в конструкторе
	implementation "org.hibernate.orm:hibernate-core"
	implementation 'org.springframework.boot:spring-boot-starter'

//	зависимость для работы с PEST API
//	Если вы хотите создать Spring web-приложение, просто добавьте зависимость
	implementation 'org.springframework.boot:spring-boot-starter-web'

	implementation 'org.springframework.boot:spring-boot-starter-validation'
//	если вы хотите начать использовать Spring Data JPA для доступа к базе данных
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	// подключение liquidbase
	implementation 'org.liquibase:liquibase-core'

	implementation 'org.postgresql:postgresql'

	// last version 2.8.3 didn't work because of java 17 library conflict (java 17 recommend)
	//	https://mvnrepository.com/artifact/org.springdoc/springdoc-openapi-starter-webmvc-ui
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0'
	// if were needs to check start swagger on .../actuator/mappings
//	implementation 'org.springframework.boot:spring-boot-starter-actuator'


	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework:spring-test'
	testImplementation 'org.junit.jupiter:junit-jupiter'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}
//test - говорит о том, что на этапе прогона тестов будет использован JUnit.
tasks.named('test') {
	useJUnitPlatform()
}
